{"version":3,"sources":["more.svg","menu.svg","logo.svg","Navigation.js","ModellingData.js","Animals.js","FruitVeg.js","Root.js","GenericNotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classNameNow","_this2","react_default","a","createElement","className","href","NavLink","to","Link1","Link2","id","onClick","document","getElementsByClassName","setState","src","menu","Component","ModellingData","key","Id","Thumb","style","fontWeight","Title","Description","more","showModel","role","type","closeModel","bind","FullSize","Family","Type","CollectiveNoun","Animals","close","assertThisInitialized","show","data_animal","getElementById","display","opacity","fetch","then","response","json","data","smallDiv","map","dis","src_ModellingData","ImageURLs","catch","error","console","log","FruitVeg","data_veg","Genus","Root","src_Navigation","GenericNotFound","class","App","BrowserRouter","src_Root","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04c1f883.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/more.e624505a.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.18969329.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport App from './App'\nimport style from 'bootstrap/dist/css/bootstrap.css';\nimport { NavLink } from 'react-router-dom';\nimport menu from './menu.svg';\nimport './App.css';\n{/*creation of responsive navigation bar*/}\nclass Navigation extends Component {\nconstructor(props){\n\tsuper(props);\n\tthis.state={\n\t\tclassNameNow:\"nav navbar-nav navAnchor\"\n\t}\n}\n\n  render() {\n  \n    return (\n\t\t<div>\n\t\t{/*Bootstrap navbar*/}\n\t  <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n\t\t \n\t\t\t<div className=\"navbar-header\">\n\t\t\t  <a className=\"navbar-brand\" href=\"#\">KnowledgeClass</a>\n\t\t\t</div>\n\t\t\t<ul className={this.state.classNameNow} >\n\t\t\t  <li ><NavLink to=\"/Animals\" >{this.props.Link1}</NavLink></li>\n\t\t\t  <li><NavLink to=\"/FruitVeg\" >{this.props.Link2}</NavLink></li>\n\t\t\t  {/*Creation of Bar for rensponsive navigation bar starts here*/}\n\t\t\t  <li id=\"barIconli\" onClick={()=>{\n\t\t\t\t var x = document.getElementsByClassName(\"navAnchor\");\n\t\t\t\t {/*use of state to toggle the menus in navigation bar*/}\n\t\t\t\t {/*the addition of class hides and shows in menus accordingly*/}\n\t\t\t\t  if (this.state.classNameNow === \"nav navbar-nav navAnchor\") {\n\t\t\t\t\n\t\t\t\t\tthis.setState({classNameNow:\"nav navbar-nav navAnchor responsive\"});\n\t\t\t\t\t\n\t\t\t\t  } else {\n\t\t\t\t\t\n\t\t\t\t\tthis.setState({classNameNow:\"nav navbar-nav navAnchor\"});\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t  \n\t\t\t  }}> <img id=\"barIcon\" src={menu} /> </li>\n\t\t\t  {/*Creation of Bar for rensponsive navigation bar ends here*/}\n\t\t\t</ul>\n\t\t\t</nav>\n\t\t\t\n\t  </div>\n    );\n  }\n}\n\nexport default Navigation;\n\n","import React, { Component } from 'react';\nimport './Animal.css';\nimport './App.css';\nimport style from 'bootstrap/dist/css/bootstrap.css';\nimport more from './more.svg';\n{/* Stateless component creates each tile and modal dialog for each data that is recieved via props*/}\nconst ModellingData = (props) => {\n\t\t\t\treturn(\n\t\t\t\t/* creation of list data starts here*/\n\t\t\t\t\t<div key={props.Id+\"div\"}>\n\t\t\t\t\t\t<div key={props.Id} className=\"row listData\">\n\t\t\t\t\t\t\t<div className=\"col-xs-4 col-md-3 col-lg-1 image\" >\n\t\t\t\t\t\t\t\t<img className=\"img img-fluid img-responsive\" src={props.Thumb}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-xs-6 col-md-6 col-lg-10 \" >\n\t\t\t\t\t\t\t\t<div  style={{'fontWeight':'bold'}}>{props.Title}</div>\n\t\t\t\t\t\t\t\t<p>{props.Description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-xs-2 col-md-3 col-lg-1 moreButton\">\n\t\t\t\t\t\t\t\t<img className=\"imageMore\" src={more} onClick={()=>props.showModel(props.Id)} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* creation of list data ends here*/}\n\t\t\t\t\t\t{/* creation of modal dialog starts here*/}\n\t\t\t\t\t\t<div className=\"modal fade\" key={\"modal\"+props.Id} id={props.Id} role=\"dialog\">\n\t\t\t\t\t\t\t<div className=\"modal-dialog\">\n\t\t\t\t\t\t\t  <div className=\"modal-content\">\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t  <button type=\"button\" className=\"close\" onClick={props.closeModel.bind(this,props.Id)}>&times;</button>\n\t\t\t\t\t\t\t\t  <h4 className=\"modal-title\">{props.Title}</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t<img className=\"img img-fluid img-responsive fullImg\" src={props.FullSize}/>\n\t\t\t\t\t\t\t\t  <p><b>Family : </b>{props.Family}</p>\n\t\t\t\t\t\t\t\t  <p><b>{props.Type} : </b>{props.CollectiveNoun}</p>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t  <button type=\"button\" className=\"btn btn-default\" onClick={props.closeModel.bind(this,props.Id)}>Close</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* creation of modal dialog ends here*/}\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t);\n\t\t\t\n\t\t\n\t\t\t}\n\nexport default ModellingData;\n","import React, { Component } from 'react';\nimport './Animal.css';\nimport './App.css';\nimport style from 'bootstrap/dist/css/bootstrap.css';\nimport more from './more.svg';\nimport ModellingData from './ModellingData';\n{/*component that animals data from the API*/}\nclass Animals extends Component {\nconstructor(props){\n\tsuper(props);\n\tthis.close=this.close.bind(this);\n\tthis.show=this.show.bind(this);\n\tthis.state={\n\t\tdata_animal:\"\",\n\t\t\n\t}\n\n}\n/*functions used to close the modal dialog*/\nclose(id){\ndocument.getElementById(id).style.display=\"none\";\ndocument.getElementById(id).style.opacity=\"0\";\n}\n/*functions used to open the modal dialog*/\nshow(id){\ndocument.getElementById(id).style.display=\"block\";\ndocument.getElementById(id).style.opacity=\"1\";\n}\n/*functions used to fetch data before the components mount andmap each data*/\ncomponentDidMount(){\n\tfetch('http://styleguide.effectivedigital.com/interview/api/animals')\n\t.then(response=>{;return response.json();})\n\t.then(data=>{\n\t\t\tlet smallDiv= data.map((dis)=>{\n\t\t\tlet id=\"modalAnimal\"+dis.Id;\n\t\t\t\treturn(\n\t\t\t\t/*call to other component to give structure to the fetched data*/\n\t\t\t\t<ModellingData Id={id}\n\t\t\t\t\t\t\t   Thumb={dis.ImageURLs.Thumb}\n\t\t\t\t\t\t\t   Title={dis.Title}\n\t\t\t\t\t\t\t   Description={dis.Description}\n\t\t\t\t\t\t\t   FullSize={dis.ImageURLs.FullSize}\n\t\t\t\t\t\t\t   Family={dis.Family}\n\t\t\t\t\t\t\t   Type=\"Collective Noun\"\n\t\t\t\t\t\t\t   CollectiveNoun={dis.CollectiveNoun}\n\t\t\t\t\t\t\t   closeModel={this.close}\n\t\t\t\t\t\t\t   showModel={this.show}\n\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t);\n\t\t\t\n\t\t});\n\t\t{/*the created structure is set in state*/}\n\t\t\tthis.setState({data_animal:smallDiv});\n\t\t})\n\t.catch(error=>console.log(error))\n\t\n}\n\n\n\n  render() {\n  \n    return (\n\t\t<div className=\"container\" id=\"dataContent\">\n\t\t  <div id=\"animals\" className=\"row\">{this.state.data_animal}</div>\n\t\t</div>\n    );\n  }\n}\n\nexport default Animals;\n","import React, { Component } from 'react';\nimport './Fruit_Veg.css';\nimport './App.css';\nimport style from 'bootstrap/dist/css/bootstrap.css';\nimport more from './more.svg';\nimport ModellingData from './ModellingData';\n{/*component that fruit and vegetables data from the API*/}\nclass FruitVeg extends Component {\nconstructor(props){\n\tsuper(props);\n\tthis.close=this.close.bind(this);\n\tthis.show=this.show.bind(this);\n\tthis.state={\n\t\tdata_veg:\"\"\n\t}\n\n}\n/*functions used to close the modal dialog*/\nclose(id){\ndocument.getElementById(id).style.display=\"none\";\ndocument.getElementById(id).style.opacity=\"0\";\n}\n/*functions used to open the modal dialog*/\nshow(id){\ndocument.getElementById(id).style.display=\"block\";\ndocument.getElementById(id).style.opacity=\"1\";\n}\n\n/*functions used to fetch data before the components mount andmap each data*/\ncomponentWillMount(){\n\t\tfetch('http://styleguide.effectivedigital.com/interview/api/fruitveg')\n\t.then(response=>{;return response.json();})\n\t.then(data=>{\n\t\t\tlet smallDiv= data.map((dis)=>{\n\t\t\tlet id=\"modalVeg\"+dis.Id;\n\t\t\t\treturn(\n\t\t\t\t/*call to othercomponent to give structure to the fetched data*/\n\t\t\t\t\t<ModellingData Id={id}\n\t\t\t\t\t\t\t   Thumb={dis.ImageURLs.Thumb}\n\t\t\t\t\t\t\t   Title={dis.Title}\n\t\t\t\t\t\t\t   Description={dis.Description}\n\t\t\t\t\t\t\t   FullSize={dis.ImageURLs.FullSize}\n\t\t\t\t\t\t\t   Family={dis.Family}\n\t\t\t\t\t\t\t   Type=\"Genus\"\n\t\t\t\t\t\t\t   CollectiveNoun={dis.Genus}\n\t\t\t\t\t\t\t   closeModel={this.close}\n\t\t\t\t\t\t\t   showModel={this.show}\n\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t{/*the created structure is set in state*/}\n\t\t\tthis.setState({data_veg:smallDiv});\n\t\t\t})\n\t.catch(error=>console.log(error))\n}\n\n\n  render() {\n  \n    return (\n\t\t<div className=\"container\" id=\"dataContent\">\n\t\t\t<div id=\"fruit_veg\" className=\"row\">{this.state.data_veg}</div>\n\t\t</div>\n    );\n  }\n}\n\nexport default FruitVeg;","import React, { Component } from 'react';\nimport App from './App'\nimport style from 'bootstrap/dist/css/bootstrap.css';\nimport Navigation from './Navigation';\nimport Animals from './Animals';\nimport Fruit_Veg from './FruitVeg'\n{/* Main Root Component*/}\nclass Root extends Component {\nconstructor(props){\n\tsuper(props);\n\t\n\t}\n\t\n  render() {\n  \n    return (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\t\n\t\t\t\t< Navigation Link1=\"Animals\" Link2=\"Fruits And Vegetables\">\t\n\t\t\t\t</Navigation>\n\t\t\t</div>\n\t\t\t\t\t\n\t\t</div>\n    );\n  }\n}\n\nexport default Root;\n\n","import React, { Component } from 'react';\nimport style from 'bootstrap/dist/css/bootstrap.css';\n\n{/* Stateless component creates each tile and modal dialog for each data that is recieved via props*/}\nclass GenericNotFound extends Component {\nconstructor(){\nsuper();\n}\n\t\t\trender(){\treturn(\n\t\t\t\t/* creation of list data starts here*/\n\t\t\t\t<div  class=\"container\" id=\"dataContent\">404: Not found</div>\t\t\n\t\t\t\t\n\t\t\n\t\t\t);\n\t\t\t}\n\t\t}\n\nexport default GenericNotFound;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Root from './Root';\nimport Animals from './Animals';\nimport FruitVeg from './FruitVeg'\nimport GenericNotFound from './GenericNotFound'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n/*component that creates routes for application*/\nclass App extends Component {\n  render() {\n    return (\n     <BrowserRouter>\n\t <div>\n\t <Root/>\n\t <Switch>\n\t\t<Route path=\"/\" component={Animals} exact/>\n\t\t<Route path=\"/species\" component={Animals} exact/>\n\t\t<Route path=\"/FruitVeg\" component={FruitVeg}/>\n\t\t<Route path=\"/Animals\" component={Animals}/>\n\t\t{/*routes written for any junk route*/}\n\t\t<Route  component={GenericNotFound} />\n\t</Switch>\n\t\t\n\t\t</div>\n\t </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}